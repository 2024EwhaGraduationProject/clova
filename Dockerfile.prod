# BUILDER #
###########

# pull official base image
FROM python:3.8-slim-buster as builder

# set work directory
WORKDIR /usr/src/app

# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install build dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    pkg-config \
    libxml2-dev \
    libxslt1-dev \
    python3-dev \
    zlib1g-dev \
    libjpeg-dev \
    libmariadb-dev \
    && pip install --upgrade pip setuptools wheel \
    && pip install mysqlclient \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# update pip
RUN pip install --upgrade pip

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt

#########
# FINAL #
#########

# pull official base image
FROM python:3.8-slim-buster

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup --system app && adduser --system --ingroup app app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install runtime dependencies
RUN apt-get update && apt-get install -y --no-install-recommends \
    pkg-config \
    libpq5 \
    tzdata \
    wget gnupg lsb-release \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

# Set timezone
RUN ln -snf /usr/share/zoneinfo/Asia/Seoul /etc/localtime

# Add MySQL APT repository GPG key
RUN wget -qO - https://repo.mysql.com/RPM-GPG-KEY-mysql | gpg --dearmor -o /etc/apt/trusted.gpg.d/mysql.gpg

ENV DEBIAN_FRONTEND=noninteractive
RUN apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys B7B3B788A8D3785C && \
    cd /tmp && \
    wget https://dev.mysql.com/get/mysql-apt-config_0.8.20-1_all.deb && \
    dpkg -i mysql-apt-config_0.8.20-1_all.deb && \
    apt-get update && \
    apt-get install -y libmysqlclient21 && \
    rm mysql-apt-config_0.8.20-1_all.deb

# copy over the built wheels and install them
COPY --from=builder /usr/src/app/wheels /wheel
COPY --from=builder /usr/src/app/requirements.txt .

RUN pip install --upgrade pip setuptools wheel
RUN pip install mysqlclient
RUN pip install /wheels/*

# set timezone
ENV TZ=Asia/Seoul

# copy entrypoint-prod.sh
COPY ./config/docker/entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app
