# BUILDER #
###########

# pull official base image
FROM python:3.8-alpine as builder

# set work directory
WORKDIR /usr/src/app


# set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1

# install psycopg2 dependencies
RUN apt-get update && apt-get install python3 python3-dev mariadb-dev build-base libxml2-dev libxslt-dev && pip3 install mysqlclient

# dependencies for pillow
RUN apt-get install --no-cache jpeg-dev zlib-dev
RUN apt-get install --no-cache --virtual .build-deps build-base linux-headers

RUN pip install --upgrade pip

# install dependencies
COPY ./requirements.txt .
RUN pip wheel --no-cache-dir --no-deps --wheel-dir /usr/src/app/wheels -r requirements.txt



#########
# FINAL #
#########

# pull official base image
FROM python:3.8-alpine

# create directory for the app user
RUN mkdir -p /home/app

# create the app user
RUN addgroup -S app && adduser -S app -G app

# create the appropriate directories
ENV HOME=/home/app
ENV APP_HOME=/home/app/web
RUN mkdir $APP_HOME
RUN mkdir $APP_HOME/static
RUN mkdir $APP_HOME/media
WORKDIR $APP_HOME

# install dependencies
RUN apt-get update && apt-get install libpq tzdata
RUN ln -snf /usr/share/zoneinfo/Asia/Seoul /etc/localtime
RUN apt-get update \
    && apt-get install --virtual build-deps gcc python3-dev musl-dev \
    && apt-get install --no-cache jpeg-dev zlib-dev mariadb-dev \
    && apt-get install --no-cache lapack-dev openblas-dev \
    && apt-get install --no-cache libffi-dev build-base openssl-dev rust cargo

COPY --from=builder /usr/src/app/wheels /wheels
COPY --from=builder /usr/src/app/requirements.txt .

RUN pip install --upgrade pip
RUN pip install mysqlclient
RUN pip install /wheels/*

RUN apt-get purge -y --auto-remove build-essential gcc python3-dev

# set timezone
ENV TZ=Asia/Seoul

# copy entrypoint-prod.sh
COPY ./config/docker/entrypoint.prod.sh $APP_HOME

# copy project
COPY . $APP_HOME

# chown all the files to the app user
RUN chown -R app:app $APP_HOME

# change to the app user
USER app
